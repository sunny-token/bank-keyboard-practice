{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/ninebot/Desktop/workspace/bank-keyboard-practice/app/home/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback, useRef } from \"react\";\n\ninterface CompletedNumber {\n  number: string;\n  input: string;\n  accuracy: number;\n  time: string;\n}\n\n// 银行实际业务数据集\nconst BANK_NUMBERS = [\n  \"940223400\",\n  \"932699900\",\n  \"623385000\",\n  \"991366200\",\n  \"784512300\",\n  \"657894100\",\n  \"320145600\",\n  \"458796200\",\n  \"123456700\",\n  \"876543200\",\n];\n\n// 配置变量\nconst MIN_LENGTH = 8; // 最小长度\nconst MAX_LENGTH = 12; // 最大长度\n\nexport default function BankKeypadPractice() {\n  const [targetNumber, setTargetNumber] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [charStatus, setCharStatus] = useState<(\"correct\" | \"wrong\")[]>([]);\n  const [startTime, setStartTime] = useState(0);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [accuracy, setAccuracy] = useState(0);\n  const [completedNumbers, setCompletedNumbers] = useState<CompletedNumber[]>(\n    [],\n  );\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  // 生成纯数字练习序列（无小数点）\n  const generatePracticeNumber = useCallback(() => {\n    // 50%概率使用银行真实数据\n    if (Math.random() > 0.5 && BANK_NUMBERS.length > 0) {\n      return BANK_NUMBERS[Math.floor(Math.random() * BANK_NUMBERS.length)];\n    }\n\n    // 随机生成长度8-12的数字\n    const length =\n      MIN_LENGTH + Math.floor(Math.random() * (MAX_LENGTH - MIN_LENGTH + 1));\n    return Array.from({ length }, () => Math.floor(Math.random() * 10)).join(\n      \"\",\n    );\n  }, []);\n\n  // 初始化练习\n  const initPractice = useCallback(() => {\n    const newNumber = generatePracticeNumber();\n    setTargetNumber(newNumber);\n    setInputValue(\"\");\n    setCharStatus([]);\n    setStartTime(Date.now());\n    setElapsedTime(0);\n    setAccuracy(0);\n    inputRef.current?.focus();\n  }, [generatePracticeNumber]);\n\n  useEffect(() => {\n    initPractice();\n  }, [initPractice]);\n\n  // 实时匹配逻辑\n  useEffect(() => {\n    const newStatus = inputValue\n      .split(\"\")\n      .map((char, i) =>\n        i < targetNumber.length && char === targetNumber[i]\n          ? \"correct\"\n          : \"wrong\",\n      );\n    setCharStatus(newStatus);\n\n    // 计算实时正确率\n    const correctCount = newStatus.filter((s) => s === \"correct\").length;\n    const totalChars = Math.max(inputValue.length, 1);\n    setAccuracy(Math.round((correctCount / totalChars) * 100));\n    if (inputValue.length === targetNumber.length && targetNumber) {\n      completePractice(newStatus);\n    }\n  }, [inputValue, targetNumber]);\n\n  // 计时器逻辑\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n    if (startTime > 0 && inputValue.length < targetNumber.length) {\n      timer = setInterval(() => {\n        setElapsedTime(Date.now() - startTime);\n      }, 100);\n    }\n    return () => clearInterval(timer);\n  }, [startTime, inputValue, targetNumber]);\n\n  // 处理键盘输入 [4]()[9]()\n  const handleKeyDown = useCallback(\n    (e: any) => {\n      if (inputValue.length >= targetNumber.length) {\n        return;\n      }\n      // 只处理数字键和功能键\n      if (e.key >= \"0\" && e.key <= \"9\") {\n        setInputValue((prev) => prev + e.key);\n        e.preventDefault();\n      } else if (e.key === \"Backspace\") {\n        setInputValue((prev) => prev.slice(0, -1));\n        e.preventDefault();\n      } else if (e.key === \"Escape\" || e.key === \"Delete\") {\n        setInputValue(\"\");\n        e.preventDefault();\n      } else if (\n        e.key === \"Enter\" &&\n        inputValue.length === targetNumber.length\n      ) {\n        completePractice(charStatus);\n      }\n    },\n    [inputValue, targetNumber],\n  );\n\n  // 完成练习统计\n  const completePractice = (newStatus: (\"correct\" | \"wrong\")[]) => {\n    const correctCount = newStatus.filter((s) => s === \"correct\").length;\n    const totalChars = targetNumber.length;\n    const practiceAccuracy = Math.round((correctCount / totalChars) * 100);\n    const timeUsed = (Date.now() - startTime) / 1000;\n\n    setCompletedNumbers((prev) => [\n      ...prev,\n      {\n        number: targetNumber,\n        input: inputValue,\n        accuracy: practiceAccuracy,\n        time: timeUsed.toFixed(2),\n      },\n    ]);\n\n    // 2秒后开始新练习\n    setTimeout(() => {\n      initPractice();\n    }, 2000);\n  };\n\n  // 自动聚焦输入框 [1]()\n  useEffect(() => {\n    const handleFocus = () => inputRef.current?.focus();\n    window.addEventListener(\"click\", handleFocus);\n    return () => window.removeEventListener(\"click\", handleFocus);\n  }, []);\n\n  // 键盘事件监听 [4]()[9]()\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [handleKeyDown]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-3xl mx-auto bg-white rounded-xl shadow-md overflow-hidden p-8\">\n        <div className=\"text-center mb-10\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n            银行数字键盘训练系统\n          </h1>\n          <p className=\"text-gray-600\">使用物理键盘输入下方显示的数字序列</p>\n\n          <div className=\"mt-6 flex justify-center space-x-8\">\n            <div className=\"bg-blue-50 rounded-lg p-4 w-32\">\n              <p className=\"text-sm text-blue-600 mb-1\">用时</p>\n              <p className=\"text-2xl font-mono\">\n                {(elapsedTime / 1000).toFixed(1)}s\n              </p>\n            </div>\n            <div className=\"bg-green-50 rounded-lg p-4 w-32\">\n              <p className=\"text-sm text-green-600 mb-1\">正确率</p>\n              <p className=\"text-2xl font-mono\">{accuracy}%</p>\n            </div>\n          </div>\n        </div>\n\n        {/* 目标数字显示区 */}\n        <div className=\"mb-12\">\n          <h2 className=\"text-xl font-semibold text-gray-700 mb-4\">\n            请输入以下数字(长度：{targetNumber.length})：\n          </h2>\n          <div\n            className=\"text-4xl font-mono bg-gray-100 p-6 rounded-xl shadow-inner tracking-widest\"\n            onClick={() => inputRef.current?.focus()}\n          >\n            {targetNumber.split(\"\").map((char, i) => (\n              <span key={i} className=\"inline-block w-12 text-center\">\n                {char}\n              </span>\n            ))}\n          </div>\n        </div>\n\n        {/* 输入反馈区 */}\n        <div\n          className=\"relative mb-12 min-h-[80px] border-2 border-gray-300 rounded-xl p-6 font-mono text-3xl tracking-widest flex flex-wrap items-center\"\n          onClick={() => inputRef.current?.focus()}\n        >\n          {inputValue.split(\"\").map((char, i) => (\n            <span\n              key={i}\n              className={`inline-block w-12 text-center ${\n                charStatus[i] === \"correct\"\n                  ? \"text-green-500\"\n                  : \"text-red-500 underline\"\n              }`}\n            >\n              {char}\n            </span>\n          ))}\n\n          {/* 光标 */}\n          {inputValue.length < targetNumber.length && (\n            <span className=\"ml-1 animate-pulse bg-gray-800 w-2 h-12 inline-block align-middle\"></span>\n          )}\n\n          {/* 隐藏的输入框（用于获取物理键盘输入） */}\n          <input\n            ref={inputRef}\n            type=\"text\"\n            className=\"absolute opacity-0 -z-10\"\n            autoFocus\n          />\n        </div>\n\n        {/* 操作提示 */}\n        <div className=\"bg-yellow-50 rounded-lg p-4 mb-8\">\n          <p className=\"text-yellow-700 text-center\">\n            <span className=\"font-semibold\">操作说明：</span>\n            使用键盘数字键输入 | Backspace删除 | Delete清空 | Enter提交\n          </p>\n        </div>\n\n        {/* 历史记录统计 */}\n        {completedNumbers.length > 0 && (\n          <div className=\"mt-12\">\n            <h3 className=\"text-xl font-semibold text-gray-700 mb-4\">\n              练习记录\n            </h3>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      序号\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      目标数字\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      输入数字\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      正确率\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      用时(秒)\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {completedNumbers.map((record, index) => (\n                    <tr\n                      key={index}\n                      className={index % 2 === 0 ? \"bg-white\" : \"bg-gray-50\"}\n                    >\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 font-mono\">\n                        {record.number}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 font-mono\">\n                        {record.input}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                        <span\n                          className={`px-2 py-1 rounded-full ${\n                            record.accuracy > 90\n                              ? \"bg-green-100 text-green-800\"\n                              : record.accuracy > 70\n                              ? \"bg-yellow-100 text-yellow-800\"\n                              : \"bg-red-100 text-red-800\"\n                          }`}\n                        >\n                          {record.accuracy}%\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {record.time}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 525, "column": 0}, "map": {"version":3,"sources":["file:///Users/ninebot/Desktop/workspace/bank-keyboard-practice/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 548, "column": 0}, "map": {"version":3,"sources":["file:///Users/ninebot/Desktop/workspace/bank-keyboard-practice/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 555, "column": 0}, "map": {"version":3,"sources":["file:///Users/ninebot/Desktop/workspace/bank-keyboard-practice/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}}]
}